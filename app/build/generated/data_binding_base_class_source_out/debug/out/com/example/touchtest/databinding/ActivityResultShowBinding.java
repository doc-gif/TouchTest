// Generated by view binder compiler. Do not edit!
package com.example.touchtest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.touchtest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultShowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backbutton;

  @NonNull
  public final TextView com1Reshow;

  @NonNull
  public final TextView com2Reshow;

  @NonNull
  public final TextView com3Reshow;

  @NonNull
  public final TextView com4Reshow;

  @NonNull
  public final TextView questionReshow;

  private ActivityResultShowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backbutton, @NonNull TextView com1Reshow, @NonNull TextView com2Reshow,
      @NonNull TextView com3Reshow, @NonNull TextView com4Reshow,
      @NonNull TextView questionReshow) {
    this.rootView = rootView;
    this.backbutton = backbutton;
    this.com1Reshow = com1Reshow;
    this.com2Reshow = com2Reshow;
    this.com3Reshow = com3Reshow;
    this.com4Reshow = com4Reshow;
    this.questionReshow = questionReshow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultShowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultShowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result_show, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultShowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbutton;
      ImageButton backbutton = ViewBindings.findChildViewById(rootView, id);
      if (backbutton == null) {
        break missingId;
      }

      id = R.id.com1_reshow;
      TextView com1Reshow = ViewBindings.findChildViewById(rootView, id);
      if (com1Reshow == null) {
        break missingId;
      }

      id = R.id.com2_reshow;
      TextView com2Reshow = ViewBindings.findChildViewById(rootView, id);
      if (com2Reshow == null) {
        break missingId;
      }

      id = R.id.com3_reshow;
      TextView com3Reshow = ViewBindings.findChildViewById(rootView, id);
      if (com3Reshow == null) {
        break missingId;
      }

      id = R.id.com4_reshow;
      TextView com4Reshow = ViewBindings.findChildViewById(rootView, id);
      if (com4Reshow == null) {
        break missingId;
      }

      id = R.id.question_reshow;
      TextView questionReshow = ViewBindings.findChildViewById(rootView, id);
      if (questionReshow == null) {
        break missingId;
      }

      return new ActivityResultShowBinding((ConstraintLayout) rootView, backbutton, com1Reshow,
          com2Reshow, com3Reshow, com4Reshow, questionReshow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
